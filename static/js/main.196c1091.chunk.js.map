{"version":3,"sources":["component/header/header.component.jsx","component/homepage/homepage.component.jsx","component/skills/linearprogess.component.js","component/skills/skills.component.jsx","component/profolio/profolio.component.jsx","component/contact/contact.component.jsx","component/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderPage","className","href","HomePage","id","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","useStyles","makeStyles","root","LinearWithValueLabel","classes","React","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","SkillsPage","data","map","title","ProfolioPage","name","path","class","ContactPage","download","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.196c1091.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './header.styles.scss';\r\n\r\nconst HeaderPage = () => (\r\n  <div className='headercontainer'>\r\n    <a className='linkoption' href='#home'><div className='option'>HOME</div></a>\r\n    <a className='linkoption' href='#project'><div className='option'>PROJECT</div></a>\r\n    <a className='linkoption' href='#skills'><div className='option'>SKILLS</div></a>\r\n    <a className='linkoption' href='#contact'><div className='option'>CONTACT</div></a>\r\n  </div>\r\n);\r\n\r\nexport default HeaderPage;\r\n","import React from 'react';\r\n\r\nimport './homepage.styles.scss';\r\n\r\nconst HomePage = () => (\r\n    <div className='homeconatiner' id='home'>\r\n        <div className='hometitle'>\r\n            <h2>Albee Chen</h2>\r\n            <h6>Software developer</h6>\r\n            <p>Welcome to my portfolio!</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"white\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearWithValueLabel({value}) {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= value? value : prevProgress + 10));\r\n    }, 800);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport data from './skills.data.json';\r\nimport LinearWithValueLabel from './linearprogess.component';\r\n\r\nimport './skills.styles.scss';\r\n\r\nconst SkillsPage = () => (\r\n\r\n    <div className='skillcontainer' id='skills'>\r\n        <h2 className='skillttitle'>SKILL</h2>\r\n        {data.map(({title, value}) => (\r\n            <div className='skillcontent'>\r\n                <div className='skill'>\r\n                    <p>{title}</p>\r\n                </div>          \r\n                <div className='progressbar'>\r\n                    <LinearWithValueLabel value={value}  />\r\n                </div>                  \r\n            </div>\r\n        ))}   \r\n    </div>\r\n    \r\n);\r\n\r\n\r\nexport default SkillsPage;","import React, { useEffect, useCallback } from 'react';\r\nimport data from './portfolio.data.json';\r\nimport './profolio.styles.scss';\r\n\r\nconst ProfolioPage = () => (\r\n\r\n    \r\n    <div className='profoliocontainer'  id='project'>\r\n        <h2 className='profoliotitle'>Project</h2>\r\n        <div className='profoliocontent'>\r\n            {data.map(({ name, path }) => (\r\n                <div className='profolioitem'>\r\n                <div class=\"flip-profolioitem-inner\">\r\n                    <div class=\"flip-profolioitem-front\">\r\n                        <h2>{name}</h2>\r\n                    </div>\r\n                    <div class=\"flip-profolioitem-back\">\r\n                        <h2>{path}</h2>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    \r\n);\r\n\r\n\r\n\r\nexport default ProfolioPage;","import React from 'react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './contact.styles.scss';\r\n\r\nconst ContactPage = () => (\r\n    <div id=\"contact\" className='contactcontainer'>\r\n        <h2 className='contacttitle'>Contact</h2>\r\n        \r\n        <div className='contactcontent'>   \r\n            <div className='contactimg'></div>\r\n            <div>\r\n                <div><RoomIcon className='contactitem'/> <p className='contactitem'>Aliso Viejo, CA</p></div>\r\n                <div><EmailIcon className='contactitem'/> <p className='contactitem'>linda3632000@hotmail.com</p></div>\r\n                <div><a href=\"../../assets/Resume_Albee_Chen_1102.pdf\" download><GetAppIcon className='contactitem'/> <p className='contactitem'>Download resume</p></a></div>\r\n            </div> \r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => (\r\n    <div className='footercontainer'>copyright</div>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\n\nimport './App.css';\nimport HeaderPage from './component/header/header.component';\nimport HomePage from './component/homepage/homepage.component';\nimport SkillsPage from './component/skills/skills.component';\nimport ProfolioPage from './component/profolio/profolio.component';\nimport ContactPage from './component/contact/contact.component';\nimport Footer from './component/footer/footer.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderPage />\n      <HomePage />\n      <ProfolioPage />\n      <SkillsPage />\n      <ContactPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}